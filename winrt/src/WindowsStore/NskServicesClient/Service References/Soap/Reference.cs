//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NskServicesClient.Soap {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCategoryInfo", Namespace="http://schemas.datacontract.org/2004/07/Nsk.Metro.Services.Soap")]
    [System.SerializableAttribute()]
    public partial class ProductCategoryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductInfo", Namespace="http://schemas.datacontract.org/2004/07/Nsk.Metro.Services.Soap")]
    [System.SerializableAttribute()]
    public partial class ProductInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResult", Namespace="http://schemas.datacontract.org/2004/07/Nsk.Metro.Services.Soap")]
    [System.SerializableAttribute()]
    public partial class SearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NskServicesClient.Soap.ProductCategoryInfo[] CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NskServicesClient.Soap.ProductInfo[] ProductsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NskServicesClient.Soap.ProductCategoryInfo[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NskServicesClient.Soap.ProductInfo[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDetailInfo", Namespace="http://schemas.datacontract.org/2004/07/Nsk.Metro.Services.Soap")]
    [System.SerializableAttribute()]
    public partial class ProductDetailInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityPerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UnitsInStockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityPerUnit {
            get {
                return this.QuantityPerUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityPerUnitField, value) != true)) {
                    this.QuantityPerUnitField = value;
                    this.RaisePropertyChanged("QuantityPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UnitsInStock {
            get {
                return this.UnitsInStockField;
            }
            set {
                if ((this.UnitsInStockField.Equals(value) != true)) {
                    this.UnitsInStockField = value;
                    this.RaisePropertyChanged("UnitsInStock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Soap.ICatalogServices")]
    public interface ICatalogServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductCategories", ReplyAction="http://tempuri.org/ICatalogServices/GetProductCategoriesResponse")]
        NskServicesClient.Soap.ProductCategoryInfo[] GetProductCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductCategories", ReplyAction="http://tempuri.org/ICatalogServices/GetProductCategoriesResponse")]
        System.Threading.Tasks.Task<NskServicesClient.Soap.ProductCategoryInfo[]> GetProductCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductsByCategoryId", ReplyAction="http://tempuri.org/ICatalogServices/GetProductsByCategoryIdResponse")]
        NskServicesClient.Soap.ProductInfo[] GetProductsByCategoryId(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductsByCategoryId", ReplyAction="http://tempuri.org/ICatalogServices/GetProductsByCategoryIdResponse")]
        System.Threading.Tasks.Task<NskServicesClient.Soap.ProductInfo[]> GetProductsByCategoryIdAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductsByCategoryName", ReplyAction="http://tempuri.org/ICatalogServices/GetProductsByCategoryNameResponse")]
        NskServicesClient.Soap.ProductInfo[] GetProductsByCategoryName(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductsByCategoryName", ReplyAction="http://tempuri.org/ICatalogServices/GetProductsByCategoryNameResponse")]
        System.Threading.Tasks.Task<NskServicesClient.Soap.ProductInfo[]> GetProductsByCategoryNameAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/SearchInCatalog", ReplyAction="http://tempuri.org/ICatalogServices/SearchInCatalogResponse")]
        NskServicesClient.Soap.SearchResult SearchInCatalog(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/SearchInCatalog", ReplyAction="http://tempuri.org/ICatalogServices/SearchInCatalogResponse")]
        System.Threading.Tasks.Task<NskServicesClient.Soap.SearchResult> SearchInCatalogAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetImageUrlByCategoryId", ReplyAction="http://tempuri.org/ICatalogServices/GetImageUrlByCategoryIdResponse")]
        string GetImageUrlByCategoryId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetImageUrlByCategoryId", ReplyAction="http://tempuri.org/ICatalogServices/GetImageUrlByCategoryIdResponse")]
        System.Threading.Tasks.Task<string> GetImageUrlByCategoryIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductDetailInformations", ReplyAction="http://tempuri.org/ICatalogServices/GetProductDetailInformationsResponse")]
        NskServicesClient.Soap.ProductDetailInfo GetProductDetailInformations(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatalogServices/GetProductDetailInformations", ReplyAction="http://tempuri.org/ICatalogServices/GetProductDetailInformationsResponse")]
        System.Threading.Tasks.Task<NskServicesClient.Soap.ProductDetailInfo> GetProductDetailInformationsAsync(int productId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatalogServicesChannel : NskServicesClient.Soap.ICatalogServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatalogServicesClient : System.ServiceModel.ClientBase<NskServicesClient.Soap.ICatalogServices>, NskServicesClient.Soap.ICatalogServices {
        
        public CatalogServicesClient() {
        }
        
        public CatalogServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatalogServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NskServicesClient.Soap.ProductCategoryInfo[] GetProductCategories() {
            return base.Channel.GetProductCategories();
        }
        
        public System.Threading.Tasks.Task<NskServicesClient.Soap.ProductCategoryInfo[]> GetProductCategoriesAsync() {
            return base.Channel.GetProductCategoriesAsync();
        }
        
        public NskServicesClient.Soap.ProductInfo[] GetProductsByCategoryId(int categoryId) {
            return base.Channel.GetProductsByCategoryId(categoryId);
        }
        
        public System.Threading.Tasks.Task<NskServicesClient.Soap.ProductInfo[]> GetProductsByCategoryIdAsync(int categoryId) {
            return base.Channel.GetProductsByCategoryIdAsync(categoryId);
        }
        
        public NskServicesClient.Soap.ProductInfo[] GetProductsByCategoryName(string categoryName) {
            return base.Channel.GetProductsByCategoryName(categoryName);
        }
        
        public System.Threading.Tasks.Task<NskServicesClient.Soap.ProductInfo[]> GetProductsByCategoryNameAsync(string categoryName) {
            return base.Channel.GetProductsByCategoryNameAsync(categoryName);
        }
        
        public NskServicesClient.Soap.SearchResult SearchInCatalog(string query) {
            return base.Channel.SearchInCatalog(query);
        }
        
        public System.Threading.Tasks.Task<NskServicesClient.Soap.SearchResult> SearchInCatalogAsync(string query) {
            return base.Channel.SearchInCatalogAsync(query);
        }
        
        public string GetImageUrlByCategoryId(int id) {
            return base.Channel.GetImageUrlByCategoryId(id);
        }
        
        public System.Threading.Tasks.Task<string> GetImageUrlByCategoryIdAsync(int id) {
            return base.Channel.GetImageUrlByCategoryIdAsync(id);
        }
        
        public NskServicesClient.Soap.ProductDetailInfo GetProductDetailInformations(int productId) {
            return base.Channel.GetProductDetailInformations(productId);
        }
        
        public System.Threading.Tasks.Task<NskServicesClient.Soap.ProductDetailInfo> GetProductDetailInformationsAsync(int productId) {
            return base.Channel.GetProductDetailInformationsAsync(productId);
        }
    }
}
